[{"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\index.js":"1","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\App.js":"2","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\Footer.js":"3","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\pages\\Homepage.js":"4","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\NavBar.js":"5","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\pages\\Signup.js":"6","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\pages\\Login.js":"7","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\pages\\Dashboard.js":"8","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\TabNav.js":"9","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\Tab.js":"10","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\tabs\\PieChart.js":"11","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\tabs\\BarChart.js":"12","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\tabs\\LineChart.js":"13","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\generateColor.js":"14"},{"size":274,"mtime":1607108856534,"results":"15","hashOfConfig":"16"},{"size":4677,"mtime":1608121291293,"results":"17","hashOfConfig":"16"},{"size":457,"mtime":1607121844551,"results":"18","hashOfConfig":"16"},{"size":892,"mtime":1607754463662,"results":"19","hashOfConfig":"16"},{"size":2023,"mtime":1608122909679,"results":"20","hashOfConfig":"16"},{"size":4032,"mtime":1607821966232,"results":"21","hashOfConfig":"16"},{"size":4025,"mtime":1607820575786,"results":"22","hashOfConfig":"16"},{"size":11974,"mtime":1608121347808,"results":"23","hashOfConfig":"16"},{"size":1224,"mtime":1607928606790,"results":"24","hashOfConfig":"16"},{"size":322,"mtime":1607734531720,"results":"25","hashOfConfig":"16"},{"size":1790,"mtime":1608106090838,"results":"26","hashOfConfig":"16"},{"size":1810,"mtime":1607986963697,"results":"27","hashOfConfig":"16"},{"size":1823,"mtime":1607986952562,"results":"28","hashOfConfig":"16"},{"size":242,"mtime":1608107748267,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jcyvk7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\index.js",[],["62","63","64","65","66"],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\App.js",["67","68"],"import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Homepage from './components/pages/Homepage';\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport Signup from './components/pages/Signup';\nimport Login from './components/pages/Login';\nimport Dashboard from './components/pages/Dashboard';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './App.scss';\n\nfunction App() {\n    const [authData, setAuthData] = useState({\n        isAuth: '',\n        token: '',\n    });\n\n    const [chartData, setChartData] = useState({\n        title: [],\n        budget: [],\n        backgroundColor: [],\n        month: [],\n    });\n\n    const getData = () => {\n        axios\n            .get('http://localhost:3000/budget', {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                withCredentials: true,\n            })\n            .then((res) => {\n                setChartData({\n                    ...chartData,\n                    title: res.data.map((data) => {\n                        return data.title;\n                    }),\n                    budget: res.data.map((data) => {\n                        return data.budget;\n                    }),\n                    backgroundColor: res.data.map((data) => {\n                        return data.backgroundColor;\n                    }),\n                    month: res.data.map((data) => {\n                        return data.month;\n                    }),\n                });\n            });\n    };\n\n    const getAuth = () => {\n        axios\n            .get('http://localhost:3000/isUserAuth', {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                withCredentials: true,\n            })\n            .then(async (response) => {\n                await setAuthData({\n                    isAuth: response.data.isAuth,\n                    token: response.data.token,\n                });\n                console.log(authData);\n                console.log(response.data);\n            });\n    };\n\n    const setAuth = (authDetails) => {\n        setAuthData({\n            isAuth: authDetails.isAuth,\n            token: authDetails.token,\n        });\n    };\n\n    const { isAuth, token } = authData;\n\n    useEffect(() => {\n        // nothing\n    }, [isAuth]);\n\n    const { title, budget, month, backgroundColor } = chartData;\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <NavBar\n                    isAuth={isAuth}\n                    token={token}\n                    getAuth={getAuth}\n                    setAuth={setAuth}\n                />\n                <Switch>\n                    <Route exact path=\"/\" component={Homepage} />\n                    <Route\n                        exact\n                        path=\"/signup\"\n                        render={() => (\n                            <Signup\n                                token={token}\n                                isAuth={isAuth}\n                                setAuth={setAuth}\n                            />\n                        )}\n                    />\n                    <Route\n                        exact\n                        path=\"/login\"\n                        render={() => (\n                            <Login\n                                token={token}\n                                isAuth={isAuth}\n                                setAuth={setAuth}\n                            />\n                        )}\n                    />\n                    {isAuth ? (\n                        <Route\n                            exact\n                            path=\"/dashboard\"\n                            render={() => (\n                                <Dashboard\n                                    token={token}\n                                    isAuth={isAuth}\n                                    titleData={title}\n                                    budgetData={budget}\n                                    monthData={month}\n                                    backgroundColorData={backgroundColor}\n                                    getData={getData}\n                                    getAuth={getAuth}\n                                />\n                            )}\n                        />\n                    ) : (\n                        <Redirect to=\"/login\" />\n                    )}\n                </Switch>\n                <Footer />\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\Footer.js",[],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\pages\\Homepage.js",[],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\NavBar.js",[],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\pages\\Signup.js",[],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\pages\\Login.js",[],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\pages\\Dashboard.js",["69","70","71","72"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport M from 'materialize-css';\nimport jwt from 'jwt-decode';\nimport generateColor from '../../generateColor';\nimport TabNav from '../TabNav';\nimport Tab from '../Tab';\nimport PieChart from '../tabs/PieChart';\nimport BarChart from '../tabs/BarChart';\nimport LineChart from '../tabs/LineChart';\n\nfunction Dashboard({\n    token,\n    budgetData,\n    titleData,\n    backgroundColorData,\n    monthData,\n    getData,\n    getAuth,\n    isAuth,\n}) {\n    M.AutoInit();\n    const toastHTML =\n        '<span>You are about to be logged out</span><button id=\"toast-button\" class=\"btn-flat toast-action\">Refresh</button>';\n    const [dashDetails, setDashDetails] = useState({\n        selected: 'PieChart',\n        configureData: 'category',\n        submitListener: true,\n        title: '',\n        budget: '',\n        month: '',\n    });\n\n    const setSelected = (tab) => {\n        setDashDetails({\n            ...dashDetails,\n            selected: tab,\n        });\n    };\n\n    const { title, month, budget, configureData, submitListener } = dashDetails;\n\n    // eslint-disable-next-line no-unused-vars\n\n    const getRefresh = async () => {\n        await axios\n            .get('http://localhost:3000/refresh', {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                withCredentials: true,\n            })\n            .then((response) => {\n                if (response) {\n                    getAuth();\n                }\n            });\n    };\n\n    const handleRefresh = () => {\n        M.Toast.dismissAll();\n        getRefresh();\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const titleError = document.querySelector('.helper-text.title');\n        const budgetError = document.querySelector('.helper-text.budget');\n        const monthError = document.querySelector('.helper-text.month');\n\n        const titleDoc = document.querySelector('#title');\n        const budgetDoc = document.querySelector('#budget');\n        const monthDoc = document.querySelector('#month');\n\n        titleError.textContent = '';\n        budgetError.textContent = '';\n        monthError.textContent = '';\n\n        const { userId } = jwt(token);\n        const backgroundColor = generateColor();\n\n        const body = {\n            title,\n            budget,\n            month,\n            userId,\n            backgroundColor,\n        };\n\n        setDashDetails({\n            ...dashDetails,\n            titleData: '',\n            budgetData: '',\n            monthData: '',\n        });\n\n        titleDoc.value = '';\n        budgetDoc.value = '';\n        monthDoc.value = '';\n\n        axios\n            .post('http://localhost:3000/budget', JSON.stringify(body), {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                withCredentials: true,\n            })\n            .then(() => {\n                setDashDetails({\n                    ...dashDetails,\n                    submitListener: !submitListener,\n                });\n            })\n            .catch((error) => {\n                if (error.response.data.errors) {\n                    titleError.textContent = error.response.data.errors.title;\n                    budgetError.textContent = error.response.data.errors.budget;\n                    monthError.textContent = error.response.data.errors.month;\n                }\n            });\n    };\n\n    const handleDelete = () => {\n        axios\n            .delete('http://localhost:3000/budget1', {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                withCredentials: true,\n            })\n            .then((res) => {\n                console.log(res);\n                setDashDetails({\n                    ...dashDetails,\n                    submitListener: !submitListener,\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n    const handleDeleteAll = () => {\n        axios\n            .delete('http://localhost:3000/budget', {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                withCredentials: true,\n            })\n            .then((res) => {\n                console.log(res);\n                setDashDetails({\n                    ...dashDetails,\n                    submitListener: !submitListener,\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    const handleChange = (e) => {\n        setDashDetails({ ...dashDetails, [e.target.id]: e.target.value });\n    };\n\n    const handleClick = (e) => {\n        setDashDetails({ ...dashDetails, configureData: e.target.name });\n    };\n\n    const { selected } = dashDetails;\n\n    function launchToast() {\n        setTimeout(() => {\n            M.toast({ html: toastHTML });\n            const tb = document.querySelector('#toast-button');\n            tb.onclick = handleRefresh;\n        }, 40000);\n    }\n\n    function authTime() {\n        setTimeout(() => {\n            getAuth();\n        }, 60010);\n    }\n\n    useEffect(() => {\n        if (isAuth) {\n            launchToast();\n            authTime();\n        }\n\n        return () => {\n            clearTimeout(launchToast);\n            clearTimeout(authTime);\n        };\n    }, [isAuth]);\n\n    return (\n        <main className=\"body center\">\n            <h1 className=\"center-align\" id=\"dashboard-h1\">\n                Welcome to the Dashboard\n            </h1>\n            <section className=\"section container z-depth-3\" id=\"chart-section\">\n                <TabNav\n                    tabs={['PieChart', 'BarChart', 'LineChart']}\n                    selected={selected}\n                    setSelected={setSelected}\n                >\n                    <Tab isSelected={selected === 'PieChart'}>\n                        <PieChart\n                            titleData={titleData}\n                            budgetData={budgetData}\n                            monthData={monthData}\n                            backgroundColorData={backgroundColorData}\n                            getData={getData}\n                            token={token}\n                            configureData={configureData}\n                            submitListener={submitListener}\n                        />\n                    </Tab>\n\n                    <Tab isSelected={selected === 'BarChart'}>\n                        <BarChart\n                            titleData={titleData}\n                            budgetData={budgetData}\n                            monthData={monthData}\n                            backgroundColorData={backgroundColorData}\n                            getData={getData}\n                            token={token}\n                            configureData={configureData}\n                            submitListener={submitListener}\n                        />\n                    </Tab>\n                    <Tab isSelected={selected === 'LineChart'}>\n                        <LineChart\n                            titleData={titleData}\n                            budgetData={budgetData}\n                            monthData={monthData}\n                            backgroundColorData={backgroundColorData}\n                            getData={getData}\n                            token={token}\n                            configureData={configureData}\n                            submitListener={submitListener}\n                        />\n                    </Tab>\n                </TabNav>\n                {configureData !== 'category' ? (\n                    <button\n                        className=\"configure waves-effect waves-light indigo lighten-1 btn\"\n                        id=\"configure-type-button\"\n                        name=\"category\"\n                        type=\"button\"\n                        onClick={handleClick}\n                    >\n                        Category View\n                    </button>\n                ) : (\n                    <button\n                        className=\"configure waves-effect waves-light indigo lighten-1 btn\"\n                        id=\"configure-type-button\"\n                        name=\"monthly\"\n                        type=\"button\"\n                        onClick={handleClick}\n                    >\n                        Monthly View\n                    </button>\n                )}\n            </section>\n            <div className=\"container form\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-field\">\n                        <input\n                            type=\"text\"\n                            name=\"title\"\n                            id=\"title\"\n                            placeholder=\"Title\"\n                            className=\"col s6\"\n                            onChange={handleChange}\n                            required\n                        />\n                        <span\n                            className=\"helper-text title\"\n                            data-error=\"wrong\"\n                            data-success=\"right\"\n                        />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <input\n                            type=\"text\"\n                            name=\"budget\"\n                            id=\"budget\"\n                            placeholder=\"Expense\"\n                            className=\"col s6\"\n                            onChange={handleChange}\n                            required\n                        />\n                        <span\n                            className=\"helper-text budget\"\n                            data-error=\"wrong\"\n                            data-success=\"right\"\n                        />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <input\n                            type=\"text\"\n                            name=\"month\"\n                            id=\"month\"\n                            placeholder=\"Month\"\n                            className=\"col s6\"\n                            onChange={handleChange}\n                            required\n                        />\n                        <span\n                            className=\"helper-text month\"\n                            data-error=\"wrong\"\n                            data-success=\"right\"\n                        />\n                    </div>\n                    <button\n                        className=\"waves-effect waves-light indigo lighten-1 btn\"\n                        id=\"submit-type-button\"\n                        type=\"submit\"\n                    >\n                        Add an Expense\n                    </button>\n                </form>\n            </div>\n            {budgetData.length > 0 ? (\n                <div>\n                    <div>\n                        <button\n                            className=\"waves-effect waves-light indigo lighten-1 btn\"\n                            id=\"delete-button\"\n                            type=\"button\"\n                            onClick={handleDelete}\n                        >\n                            Delete Last Expense\n                        </button>\n                    </div>\n                    <div>\n                        <button\n                            className=\"waves-effect waves-light indigo lighten-1 btn\"\n                            id=\"delete-all-button\"\n                            type=\"button\"\n                            onClick={handleDeleteAll}\n                        >\n                            Reset\n                        </button>\n                    </div>\n                </div>\n            ) : (\n                <div />\n            )}\n        </main>\n    );\n}\n\nexport default Dashboard;\n","C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\TabNav.js",[],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\Tab.js",[],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\tabs\\PieChart.js",[],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\tabs\\BarChart.js",[],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\components\\tabs\\LineChart.js",[],["73","74","75","76","77"],"C:\\Users\\Gamer\\dev\\finalproject\\pb-mern\\src\\generateColor.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":67,"column":17,"nodeType":"90","messageId":"91","endLine":67,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":68,"column":17,"nodeType":"90","messageId":"91","endLine":68,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":133,"column":17,"nodeType":"90","messageId":"91","endLine":133,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":140,"column":17,"nodeType":"90","messageId":"91","endLine":140,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":152,"column":17,"nodeType":"90","messageId":"91","endLine":152,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":159,"column":17,"nodeType":"90","messageId":"91","endLine":159,"endColumn":28},{"ruleId":"78","replacedBy":"92"},{"ruleId":"80","replacedBy":"93"},{"ruleId":"82","replacedBy":"94"},{"ruleId":"84","replacedBy":"95"},{"ruleId":"86","replacedBy":"96"},"lines-around-directive",["97"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["97"],[],[],[],[],"padding-line-between-statements"]